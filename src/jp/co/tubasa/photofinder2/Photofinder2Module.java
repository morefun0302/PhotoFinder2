/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package jp.co.tubasa.photofinder2;

import java.util.ArrayList;
import java.util.Iterator;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.imageio.stream.ImageInputStream;
import javax.imageio.ImageReader;

import android.os.Environment;
import android.database.Cursor;
import android.database.SQLException;
import android.provider.MediaStore;
import android.net.Uri;
import android.content.Context;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;
//import org.appcelerator.titanium.TiApplication;

@Kroll.module(name="Photofinder2", id="jp.co.tubasa.photofinder2")
public class Photofinder2Module extends KrollModule
{
	//TiApplication appContext;
	
	// Standard Debugging variables
	private static final String LCAT = "Photofinder2Module";
	private static final boolean DBG = TiConfig.LOGD;
	private ArrayList<String> fileList = new ArrayList<String>();
	
	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;
	
	public Photofinder2Module()
	{
		super();
		//appContext = TiApplication.getInstance();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app)
	{
		Log.d(LCAT, "inside onAppCreate");
		// put module init code that needs to run when the application is created
	}
	
	@Kroll.method
	//public ArrayList<String> list()
	public String[] list()
	{
		Log.d(LCAT, "yokada list called");
		Log.d(LCAT, "yokada ext dir: " + Environment.getExternalStorageDirectory().toString());
		//File dir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM);
		//File dir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES);
		File dir = Environment.getExternalStorageDirectory();
		File[] files = dir.listFiles();
		if(files == null){
			Log.d(LCAT, "yokada files is null");
			return fileList.toArray(new String[0]);
		}
		//
		//Log.d(LCAT, "yokada files: " + files.toString());
		getJpgFiles(files);
		Log.d(LCAT, "yokada fileList.size: " + fileList.size());
		return fileList.toArray(new String[fileList.size()]);

		/*
		int len = 0;
		ArrayList<String> path = new ArrayList<String>();
		Uri image_uri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;
		//Cursor cursor = appContext.getContentResolver().query(image_uri, null, null, null, null);
		Cursor cursor = TiApplication.getInstance().getCurrentActivity().managedQuery(image_uri, null, null, null, null);
		//Cursor cursor = this.activity.managedQuery(image_uri, null, null, null, null); // syntax error
		//Log.d(LCAT, "yokada cursor: " + cursor.getClass());
		try{
			Log.d(LCAT, "yokada will cursor.moveToFirst");
			boolean success = cursor.moveToFirst();
			Log.d(LCAT, "yokada moveToFirst success?: " + success);
			if(!success){
				Log.d(LCAT, "yokada Result is empty!");
				return path.toArray(new String[len]);
			}
			
			len = cursor.getCount();
			Log.d(LCAT, "yokada len: " + len);
			for(int i = 0; i < len; i++){
				path.add(cursor.getString(i));
				cursor.moveToNext();
			}
		}
		catch(SQLException e){
			Log.d(LCAT, "yokada SQLException Occurred!");
			Log.d(LCAT, "yokada " + e.toString());
			Log.d(LCAT, "yokada " + e.getMessage());
		}
		catch(Exception e){
			Log.d(LCAT, "Exception Occurred!");
			Log.d(LCAT, "yokada " + e.toString());
			Log.d(LCAT, "yokada " + e.getMessage());
		}
		finally{
			//cursor.close(); //<= Syserr occurred here
		}

		// 09-22 00:40:32.946: W/System.err(32293):
		// at jp.co.tubasa.photofinder2.Photofinder2Module.list(Photofinder2Module.java:80)

		return path.toArray(new String[len]);
		*/
	}

	public void getJpgFiles(File[] files) {
	    for (File file : files) {
	        if (file.isDirectory()) {
	            //System.out.println("Directory: " + file.getName());
	        	//Log.d("yokada dir: ", file.toString());
	        	Log.d("yokada dir: ", file.getName());
	        	if(file.getName().indexOf('c') == 0){ // omit dot file
	        		continue;
	        	}
	        	File[] files2 = file.listFiles();
	        	if(files2 == null || files2.length <= 0){
	        		continue;
	        	}
	        	else{
	        		getJpgFiles(file.listFiles()); // Calls same method again.
	        	}
	        } else {
	        	//Log.d("yokada file: ", file.getName());
	        	if(file.length() <= 0){
	        		continue;
	        	}
	        	
	        	String name = file.getName();
	        	int pos = file.getName().lastIndexOf(".");
	        	String ext = name.substring(pos+1, name.length());
	        	if(ext.equalsIgnoreCase("jpg")){
	        		Log.d("yokada file add: ", file.getAbsolutePath());
	        		fileList.add(file.getAbsolutePath());
	        	}
	        	
	        	/*
	        	try{
	        		FileInputStream in = new FileInputStream(file.getAbsolutePath());
	        		ImageInputStream iis = ImageIO.createImageInputStream(in);
	        		Iterator readers = ImageIO.getImageReaders(iis);
	        		ImageReader reader = (ImageReader)readers.next();
	        		String ext = reader.getFormatName();
		        	if(ext.equalsIgnoreCase("jpg")){
		        		//fileList.add(file.toString());
		        		fileList.add(file.getAbsolutePath());
		        	}
	        	}
	        	catch(FileNotFoundException e){
	        		Log.d("yokada FileNotFoundException occurred", e.getMessage());
	        	}
	        	catch(IOException e){
	        		Log.d("yokada IOException occurred", e.getMessage());
	        	}
	        	*/
	        }
	    }
	}
}

